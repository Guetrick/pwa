// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProductPropertiesSimple /> should not render if no data is available 1`] = `
<SurroundPortals
  portalName="product.properties"
  portalProps={null}
/>
`;

exports[`<ProductPropertiesSimple /> should render table with properties 1`] = `
<ProductPropertiesSimple
  properties={
    Array [
      Object {
        "label": "test1",
        "value": "123",
      },
      Object {
        "label": "test2",
        "value": "456",
      },
    ]
  }
>
  <SurroundPortals
    portalName="product.properties"
    portalProps={null}
  >
    <Portal
      name="product.properties.before"
      props={null}
    />
    <Portal
      name="product.properties"
      props={null}
    >
      <div
        className={
          Object {
            "data-css-1x8awm9": "",
          }
        }
      >
        <table>
          <tbody>
            <ProductPropertiesRows
              properties={
                Array [
                  Object {
                    "label": "test1",
                    "value": "123",
                  },
                  Object {
                    "label": "test2",
                    "value": "456",
                  },
                ]
              }
            >
              <ProductPropertiesRowUngrouped
                properties={
                  Array [
                    Object {
                      "label": "test1",
                      "value": "123",
                    },
                    Object {
                      "label": "test2",
                      "value": "456",
                    },
                  ]
                }
              >
                <ProductPropertiesRow
                  key="test1-123"
                  label="test1"
                  value="123"
                >
                  <tr
                    key="test1123"
                  >
                    <td
                      className={
                        Object {
                          "data-css-fl9ufm": "",
                        }
                      }
                    >
                      test1
                    </td>
                    <td
                      className={
                        Object {
                          "data-css-fl9ufm": "",
                        }
                      }
                      data-test-id="property: 123"
                    >
                      123
                    </td>
                  </tr>
                </ProductPropertiesRow>
                <ProductPropertiesRow
                  key="test2-456"
                  label="test2"
                  value="456"
                >
                  <tr
                    key="test2456"
                  >
                    <td
                      className={
                        Object {
                          "data-css-fl9ufm": "",
                        }
                      }
                    >
                      test2
                    </td>
                    <td
                      className={
                        Object {
                          "data-css-fl9ufm": "",
                        }
                      }
                      data-test-id="property: 456"
                    >
                      456
                    </td>
                  </tr>
                </ProductPropertiesRow>
              </ProductPropertiesRowUngrouped>
              <ProductPropertiesSubGroups
                properties={
                  Array [
                    Object {
                      "label": "test1",
                      "value": "123",
                    },
                    Object {
                      "label": "test2",
                      "value": "456",
                    },
                  ]
                }
              />
            </ProductPropertiesRows>
          </tbody>
        </table>
      </div>
    </Portal>
    <Portal
      name="product.properties.after"
      props={null}
    />
  </SurroundPortals>
</ProductPropertiesSimple>
`;
