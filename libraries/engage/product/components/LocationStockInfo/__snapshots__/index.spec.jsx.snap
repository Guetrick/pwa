// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LocationStockInfo /> should not render if no location data is passed 1`] = `
<pure(LocationStockInfo)
  location={
    Object {
      "name": "",
      "visibleInventory": null,
    }
  }
>
  <LocationStockInfo
    className=""
    location={
      Object {
        "name": "",
        "visibleInventory": null,
      }
    }
    showStoreName={true}
  >
    <SurroundPortals
      portalName="product.location-stock-info"
      portalProps={
        Object {
          "availabilityText": "demo_availability_text",
          "availabilityTextColor": "green",
          "className": "",
          "inventoryBlind": undefined,
          "location": Object {
            "name": "",
            "visibleInventory": null,
          },
          "visibleInventory": null,
        }
      }
    >
      <Portal
        name="product.location-stock-info.before"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "",
              "visibleInventory": null,
            },
            "visibleInventory": null,
          }
        }
      />
      <Portal
        name="product.location-stock-info"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "",
              "visibleInventory": null,
            },
            "visibleInventory": null,
          }
        }
      />
      <Portal
        name="product.location-stock-info.after"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "",
              "visibleInventory": null,
            },
            "visibleInventory": null,
          }
        }
      />
    </SurroundPortals>
  </LocationStockInfo>
</pure(LocationStockInfo)>
`;

exports[`<LocationStockInfo /> should render with the visible inventory and with the store name 1`] = `
<pure(LocationStockInfo)
  location={
    Object {
      "name": "Test Store",
      "visibleInventory": 15,
    }
  }
>
  <LocationStockInfo
    className=""
    location={
      Object {
        "name": "Test Store",
        "visibleInventory": 15,
      }
    }
    showStoreName={true}
  >
    <SurroundPortals
      portalName="product.location-stock-info"
      portalProps={
        Object {
          "availabilityText": "demo_availability_text",
          "availabilityTextColor": "green",
          "className": "",
          "inventoryBlind": undefined,
          "location": Object {
            "name": "Test Store",
            "visibleInventory": 15,
          },
          "visibleInventory": 15,
        }
      }
    >
      <Portal
        name="product.location-stock-info.before"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": 15,
            },
            "visibleInventory": 15,
          }
        }
      />
      <Portal
        name="product.location-stock-info"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": 15,
            },
            "visibleInventory": 15,
          }
        }
      >
        <span
          className="css-d3hu7n"
        >
          <Translate
            className=""
            params={
              Object {
                "visibleInventory": 15,
              }
            }
            role={null}
            string="demo_availability_text"
            transform={null}
          >
            <span
              className=""
              role={null}
            >
              demo_availability_text
            </span>
          </Translate>
           
          <Translate
            className=""
            params={
              Object {
                "storeName": "Test Store",
              }
            }
            role={null}
            string="product.location_stock_info.pick_up_at"
            transform={null}
          >
            <span
              className=""
              role={null}
            >
              product.location_stock_info.pick_up_at
            </span>
          </Translate>
        </span>
      </Portal>
      <Portal
        name="product.location-stock-info.after"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": 15,
            },
            "visibleInventory": 15,
          }
        }
      />
    </SurroundPortals>
  </LocationStockInfo>
</pure(LocationStockInfo)>
`;

exports[`<LocationStockInfo /> should render without store name 1`] = `
<pure(LocationStockInfo)
  location={
    Object {
      "name": "Test Store",
      "visibleInventory": 15,
    }
  }
  showStoreName={false}
>
  <LocationStockInfo
    className=""
    location={
      Object {
        "name": "Test Store",
        "visibleInventory": 15,
      }
    }
    showStoreName={false}
  >
    <SurroundPortals
      portalName="product.location-stock-info"
      portalProps={
        Object {
          "availabilityText": "demo_availability_text",
          "availabilityTextColor": "green",
          "className": "",
          "inventoryBlind": undefined,
          "location": Object {
            "name": "Test Store",
            "visibleInventory": 15,
          },
          "visibleInventory": 15,
        }
      }
    >
      <Portal
        name="product.location-stock-info.before"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": 15,
            },
            "visibleInventory": 15,
          }
        }
      />
      <Portal
        name="product.location-stock-info"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": 15,
            },
            "visibleInventory": 15,
          }
        }
      >
        <span
          className="css-d3hu7n"
        >
          <Translate
            className=""
            params={
              Object {
                "visibleInventory": 15,
              }
            }
            role={null}
            string="demo_availability_text"
            transform={null}
          >
            <span
              className=""
              role={null}
            >
              demo_availability_text
            </span>
          </Translate>
           
        </span>
      </Portal>
      <Portal
        name="product.location-stock-info.after"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": 15,
            },
            "visibleInventory": 15,
          }
        }
      />
    </SurroundPortals>
  </LocationStockInfo>
</pure(LocationStockInfo)>
`;

exports[`<LocationStockInfo /> should render without the visible inventory 1`] = `
<pure(LocationStockInfo)
  location={
    Object {
      "name": "Test Store",
      "visibleInventory": null,
    }
  }
>
  <LocationStockInfo
    className=""
    location={
      Object {
        "name": "Test Store",
        "visibleInventory": null,
      }
    }
    showStoreName={true}
  >
    <SurroundPortals
      portalName="product.location-stock-info"
      portalProps={
        Object {
          "availabilityText": "demo_availability_text",
          "availabilityTextColor": "green",
          "className": "",
          "inventoryBlind": undefined,
          "location": Object {
            "name": "Test Store",
            "visibleInventory": null,
          },
          "visibleInventory": null,
        }
      }
    >
      <Portal
        name="product.location-stock-info.before"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": null,
            },
            "visibleInventory": null,
          }
        }
      />
      <Portal
        name="product.location-stock-info"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": null,
            },
            "visibleInventory": null,
          }
        }
      />
      <Portal
        name="product.location-stock-info.after"
        props={
          Object {
            "availabilityText": "demo_availability_text",
            "availabilityTextColor": "green",
            "className": "",
            "inventoryBlind": undefined,
            "location": Object {
              "name": "Test Store",
              "visibleInventory": null,
            },
            "visibleInventory": null,
          }
        }
      />
    </SurroundPortals>
  </LocationStockInfo>
</pure(LocationStockInfo)>
`;
